// 斗地主作业.cpp : 定义控制台应用程序的入口点。
//

#include "stdafx.h"
#include "doudizhu.h"
int main()
{
	menuface(); //初始菜单界面
	if (if_out_game)       //如果选择退出游戏
		return 0;
	initiaze(); //初始化
	freshofpuk(); //发牌界面
	calldizhu(); //叫地主
	while (winner_judge()) //出牌阶段
	{
		while (over_judge())
		{
			Draw();    //画出结果
			Sleep(200);
			if (mymenu.man_machine)  //人机版
			{
				if (player == 1)
					putpai(vis[player], put[player], head[player], player);   //手工出牌
				else
					autoputpai(put[player], head[player], player);                 //自动出牌  
			}
			else
			{
				putpai(vis[player], put[player], head[player], player);   //手工出牌
			}
		}
		round();   //玩家轮换
	}
	return 0;
}
//7月2号工作
//把剩余单牌组合顺子    对子组合连对     三张组合连三
//实现从连三和单牌对子中抽出牌组合算法

//新原则unite大于可以考虑是否拆除打出
//7月3号4号工作
//增加权值与手数概念  对于不同的拆牌方案选取最优 因为我每一轮都会拆牌 可增加上家出牌的情况所影响的权值概念、
//7月5号6号工作
//增加打牌方式  如己方出牌如何出牌  以及配合出牌
//对于顺子――首先分理出最优的顺子组合   如果刚好能接就接   如果是敌方出牌，优先拆出相应牌型 如果是己方出牌，能借就接 否则不要+

//做出最优拆牌方案和绝对拆牌方案
//最优拆牌方案怎么做
//在拆牌的过程采用   不同的数据结构    是否可以专门设计一种数据结构来保存中间值
//7月9号基本的接牌函数，要做先手出牌的判断，后手接牌的匹配
//先手出牌的时候考虑的情况――没什么要做的了
//主要要实现的函数――裁剪

//接牌的时候对于顺子的裁剪，因为我优先拆顺子，所以一定是最优的，只要裁剪就行
//在接连对连三 的时候先连接后裁剪 保证最优

//自学JAVA
//裁剪也写完了接下来监控出牌
//1:记录已经出牌――包括监控牌面剩余牌情况以及对手出牌情况
//2:根据监视情况推测对手剩牌
//3:监测不正常出牌――出单出对拆牌

//点击牌的用户体验非常不好需要改进  怎么过滤掉多余的鼠标信息
//不知道谁出的什么牌 增加音效
//增加动画效果 炸弹飞机王炸
//增加开始的动画界面
//增加发牌界面


//发现两个bug
//1：最后剩下3个不会打出直接跳过
//2：最后的基本牌不会自动组合

//怎么把人人和人机分开呢

//8 8报单报双不会打不够智能
//无法来一局
//特效没做
//人机对战未实现牌的隐藏
//不闪屏的效果可以再次用超级玛丽的方法优化